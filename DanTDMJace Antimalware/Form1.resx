<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AOnESSRDChwZyBn2HtSSSRpUXc//2Q==
</value>
  </data>
</root>